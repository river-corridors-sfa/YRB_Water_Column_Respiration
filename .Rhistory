breaks = c(110, 130, 150, 170, 190, 210,230,250,270,290,310,330),
#labels = c('110m', '130m', '150m', '170m', '190m', '210m','230m','250m','270m','290m','310m','330m'),
limits=c(110,330),guide = guide_colorbar(frame.colour = "black", ticks.colour = "black")
)+
guides(colour = guide_coloursteps(show.limits = TRUE))+
guides(colour = guide_colourbar(title ="Elevation (m)"))
ggmap(map2) +
geom_point(data = stations, aes(x = lon, y = lat,colour = Elevation), size = 5, shape = 16) +
scale_color_stepsn(
#colours =c('#000099','#6666FF','#66B2FF','#66FFFF','#99FFFF','#99FFCC','#CCFF99','#FFFF99','#FFCC99','#FF9933','#FF3333','#990000'), #colorRampPalette(c("blue",'lightblue' ,"yellow", "orange", "red"))(20),
colours =c('#191970','#00008B','#0000CD','#1E90FF','#00FFFF','#7FFFD4','#98FB98','#FFFF00','#FFA500','#FF7F50','#DC143C','#800000'), #colorRampPalette(c("blue",'lightblue' ,"yellow", "orange", "red"))(20),
breaks = c(110, 130, 150, 170, 190, 210,230,250,270,290,310,330),
#labels = c('110m', '130m', '150m', '170m', '190m', '210m','230m','250m','270m','290m','310m','330m'),
limits=c(110,330),guide = guide_colorbar(frame.colour = "black", ticks.colour = "black")
)+
guides(colour = guide_coloursteps(show.limits = TRUE))+
guides(colour = guide_colourbar(title ="Elevation (m)"))+
theme(legend.key.height = unit(dev.size()[2]/6 , "inches"))+
geom_text(data = stations,aes(x = lon, y = lat,label=Sites),size=4, colour='black',#check_overlap = TRUE,
nudge_y=-0.02,vjust=0)+
#geom_text_repel(label = stations$Sites,point.padding = 0.1,nudge_y = 0.001, nudge_x = 0.001)+
theme(panel.border=element_rect(linetype=1,size=2,fill=NA))+
guides(fill=guide_legend(title="Elevation (m)"))+
theme(axis.text.x=element_blank(), #remove x axis labels
axis.ticks.x=element_blank(), #remove x axis ticks
axis.text.y=element_blank(),  #remove y axis labels
axis.ticks.y=element_blank()  #remove y axis ticks
)+labs(x = "")+labs(y = "")
ggmap(map2) +
geom_point(data = stations, aes(x = lon, y = lat,colour = Elevation), size = 5, shape = 16) +
scale_color_stepsn(
#colours =c('#000099','#6666FF','#66B2FF','#66FFFF','#99FFFF','#99FFCC','#CCFF99','#FFFF99','#FFCC99','#FF9933','#FF3333','#990000'), #colorRampPalette(c("blue",'lightblue' ,"yellow", "orange", "red"))(20),
colours =c('#191970','#00008B','#0000CD','#1E90FF','#00FFFF','#7FFFD4','#98FB98','#FFFF00','#FFA500','#FF7F50','#DC143C','#800000'), #colorRampPalette(c("blue",'lightblue' ,"yellow", "orange", "red"))(20),
breaks = c(110, 130, 150, 170, 190, 210,230,250,270,290,310,330),
#labels = c('110m', '130m', '150m', '170m', '190m', '210m','230m','250m','270m','290m','310m','330m'),
limits=c(110,330)#,guide = guide_colorbar(frame.colour = "black", ticks.colour = "black")
)+
guides(colour = guide_coloursteps(show.limits = TRUE))+
guides(colour = guide_colourbar(title ="Elevation (m)"))+
theme(legend.key.height = unit(dev.size()[2]/6 , "inches"))+
geom_text(data = stations,aes(x = lon, y = lat,label=Sites),size=4, colour='black',#check_overlap = TRUE,
nudge_y=-0.02,vjust=0)+
#geom_text_repel(label = stations$Sites,point.padding = 0.1,nudge_y = 0.001, nudge_x = 0.001)+
theme(panel.border=element_rect(linetype=1,size=2,fill=NA))+
guides(fill=guide_legend(title="Elevation (m)"))+
theme(axis.text.x=element_blank(), #remove x axis labels
axis.ticks.x=element_blank(), #remove x axis ticks
axis.text.y=element_blank(),  #remove y axis labels
axis.ticks.y=element_blank()  #remove y axis ticks
)+labs(x = "")+labs(y = "")
ggmap(map2) +
geom_point(data = stations, aes(x = lon, y = lat,colour = Elevation), size = 5, shape = 16) +
scale_color_stepsn(
#colours =c('#000099','#6666FF','#66B2FF','#66FFFF','#99FFFF','#99FFCC','#CCFF99','#FFFF99','#FFCC99','#FF9933','#FF3333','#990000'), #colorRampPalette(c("blue",'lightblue' ,"yellow", "orange", "red"))(20),
colours =c('#191970','#00008B','#0000CD','#1E90FF','#00FFFF','#7FFFD4','#98FB98','#FFFF00','#FFA500','#FF7F50','#DC143C','#800000'), #colorRampPalette(c("blue",'lightblue' ,"yellow", "orange", "red"))(20),
breaks = c(110, 130, 150, 170, 190, 210,230,250,270,290,310,330),
#labels = c('110m', '130m', '150m', '170m', '190m', '210m','230m','250m','270m','290m','310m','330m'),
limits=c(110,330)#,guide = guide_colorbar(frame.colour = "black", ticks.colour = "black")
)
stations = read.csv(file.path(indir,'site_info.csv'))
stations['Sites'] = paste0(stations$SiteName,'_',stations$SiteNumber)
stations$lon<-(-1)*stations$lon
names(stations)<-c("SiteNumber", "SiteName",   "lat",   "lon",'Elevation','Sites' )
stations = stations[stations$SiteNumber%in%c(1,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,23,24,25,26,27,30),]
ggmap(map2) +
geom_point(data = stations, aes(x = lon, y = lat,colour = Elevation), size = 5, shape = 16) +
scale_color_stepsn(
#colours =c('#000099','#6666FF','#66B2FF','#66FFFF','#99FFFF','#99FFCC','#CCFF99','#FFFF99','#FFCC99','#FF9933','#FF3333','#990000'), #colorRampPalette(c("blue",'lightblue' ,"yellow", "orange", "red"))(20),
colours =c('#191970','#00008B','#0000CD','#1E90FF','#00FFFF','#7FFFD4','#98FB98','#FFFF00','#FFA500','#FF7F50','#DC143C','#800000'), #colorRampPalette(c("blue",'lightblue' ,"yellow", "orange", "red"))(20),
breaks = c(110, 130, 150, 170, 190, 210,230,250,270,290,310,330),
#labels = c('110m', '130m', '150m', '170m', '190m', '210m','230m','250m','270m','290m','310m','330m'),
limits=c(110,330)#,guide = guide_colorbar(frame.colour = "black", ticks.colour = "black")
)
map1 <- get_map(location  = c(left = -120, bottom = 46.15, right = -119, top = 46.8),maptype="satellite")
mattributes <- attributes(map1)
map2 <- matrix(adjustcolor(map1, alpha.f = 0.7), nrow = nrow(map1))
attributes(map2) <- mattributes
ggmap(map2)
geom_point(data = stations, aes(x = lon, y = lat,colour = Elevation), size = 5, shape = 16) +
scale_color_stepsn(
#colours =c('#000099','#6666FF','#66B2FF','#66FFFF','#99FFFF','#99FFCC','#CCFF99','#FFFF99','#FFCC99','#FF9933','#FF3333','#990000'), #colorRampPalette(c("blue",'lightblue' ,"yellow", "orange", "red"))(20),
colours =c('#191970','#00008B','#0000CD','#1E90FF','#00FFFF','#7FFFD4','#98FB98','#FFFF00','#FFA500','#FF7F50','#DC143C','#800000'), #colorRampPalette(c("blue",'lightblue' ,"yellow", "orange", "red"))(20),
breaks = c(110, 130, 150, 170, 190, 210,230,250,270,290,310,330),
#labels = c('110m', '130m', '150m', '170m', '190m', '210m','230m','250m','270m','290m','310m','330m'),
limits=c(110,330),guide = guide_colorbar(frame.colour = "black", ticks.colour = "black")
)+
guides(colour = guide_coloursteps(show.limits = TRUE))+
guides(colour = guide_colourbar(title ="Elevation (m)"))+
theme(legend.key.height = unit(dev.size()[2]/6 , "inches"))+
geom_text(data = stations,aes(x = lon, y = lat,label=Sites),size=3, colour='black',#check_overlap = TRUE,
nudge_y=-0.02,vjust=0)+
theme(panel.border=element_rect(linetype=1,size=2,fill=NA))+
guides(fill=guide_legend(title="Elevation (m)"))+
theme(axis.text.x=element_blank(), #remove x axis labels
axis.ticks.x=element_blank(), #remove x axis ticks
axis.text.y=element_blank(),  #remove y axis labels
axis.ticks.y=element_blank()  #remove y axis ticks
)+labs(x = "")+labs(y = "")
ggmap(map2) +
geom_point(data = stations, aes(x = lon, y = lat,colour = Elevation), size = 5, shape = 16) +
scale_color_stepsn(
#colours =c('#000099','#6666FF','#66B2FF','#66FFFF','#99FFFF','#99FFCC','#CCFF99','#FFFF99','#FFCC99','#FF9933','#FF3333','#990000'), #colorRampPalette(c("blue",'lightblue' ,"yellow", "orange", "red"))(20),
colours =c('#191970','#00008B','#0000CD','#1E90FF','#00FFFF','#7FFFD4','#98FB98','#FFFF00','#FFA500','#FF7F50','#DC143C','#800000'), #colorRampPalette(c("blue",'lightblue' ,"yellow", "orange", "red"))(20),
breaks = c(110, 130, 150, 170, 190, 210,230,250,270,290,310,330),
#labels = c('110m', '130m', '150m', '170m', '190m', '210m','230m','250m','270m','290m','310m','330m'),
limits=c(110,330),guide = guide_colorbar(frame.colour = "black", ticks.colour = "black")
)
ggmap(map2) +
geom_point(data = stations, aes(x = lon, y = lat,colour = Elevation), size = 5, shape = 16) +
scale_color_stepsn(
#colours =c('#000099','#6666FF','#66B2FF','#66FFFF','#99FFFF','#99FFCC','#CCFF99','#FFFF99','#FFCC99','#FF9933','#FF3333','#990000'), #colorRampPalette(c("blue",'lightblue' ,"yellow", "orange", "red"))(20),
colours =c('#191970','#00008B','#0000CD','#1E90FF','#00FFFF','#7FFFD4','#98FB98','#FFFF00','#FFA500','#FF7F50','#DC143C','#800000'), #colorRampPalette(c("blue",'lightblue' ,"yellow", "orange", "red"))(20),
breaks = c(110, 130, 150, 170, 190, 210,230,250,270,290,310,330),
#labels = c('110m', '130m', '150m', '170m', '190m', '210m','230m','250m','270m','290m','310m','330m'),
limits=c(110,330)#,guide = guide_colorbar(frame.colour = "black", ticks.colour = "black")
)
ggmap(map2) +
geom_point(data = stations, aes(x = lon, y = lat,colour = Elevation), size = 5, shape = 16)
names(stations)
library(Hmisc)
library(landscapemetrics)
library(landscapetools)
library(sf)
library(ggplot2)
library(raster)
library(rasterVis)
library(rgdal)
library(dplyr)
library(tmap)
library(ggpubr)
indir = 'C:/Users/linx882/OneDrive - PNNL/XLin/automation of respiration calculations/Sacling_Watershed_Function_ML/swf-production.hub/assets/data/processed'
##
#data = readRDS(file.path(indir,'nhd_CR_stream_annual_resp_DO_sens.rda'))
data <- read.csv(file.path(indir,'230123_scaling_lnd_bgc.csv'))
cnames<-c("X.1","comid","X","FromNode","ToNode")
sdata<-data[, !names(data) %in% cnames]
##
#data = readRDS(file.path(indir,'nhd_CR_stream_annual_resp_DO_sens.rda'))
data2 <- read.csv(file.path(indir,'230202_yrb_wlm_resp_dat.csv'))
cnames2<-c("COMID","FromNode","ToNode",'basin')
sdata2<-data[, !names(data2) %in% cnames2]
flattenCorrMatrix <- function(cormat, pmat) {
ut <- upper.tri(cormat)
data.frame(
row = rownames(cormat)[row(cormat)[ut]],
column = rownames(cormat)[col(cormat)[ut]],
corr  =(cormat)[ut],
pvalue = pmat[ut]
)
}
# function to extract legend from plot
get_only_legend <- function(plot) {
plot_table <- ggplot_gtable(ggplot_build(plot))
legend_plot <- which(sapply(plot_table$grobs, function(x) x$name) == "guide-box")
legend <- plot_table$grobs[[legend_plot]]
return(legend)
}
lindir = '//pnl/projects/SBR_SFA/RC2/07_Geospatial_Data/'
## YRB landcover
yrb_lc<- raster(file.path(lindir,'landcover','lc2019_YRB_5072.tif'))
yrb_shape<-shapefile(file.path(lindir,'RC2_Communication_Wrapper/YakimaRiverBasin_Boundary','Yakima_River_Basin.shp'))
shape2=spTransform(yrb_shape, crs(yrb_lc))
yrb_lc<-crop(yrb_lc, shape2)# crop to polygon
yrb_lc <- mask(yrb_lc, shape2)# mask values according to polygon
plot(yrb_lc)
#yrb_lc<- stack(file.path(lindir,'landcover','lc2019_YRB_5072.tif'))
check_landscape(yrb_lc)
# show_landscape(yrb_lc, discrete = TRUE)
#par(mar = c(0.2, 0.2, 0.2, 0.2))
#show_patches(yrb_lc, class = c(1,2), labels = TRUE)
#list_lsm(level = 'landscape')
#
#GM<-aggregate(yrb_lc, fact=3, fun=modal)
yrb <- as.factor(yrb_lc)
#levels(yrb)
#res(yrb)
land_cover <- levels(yrb)[[1]]
land_cover[,"landcover"] <- c("Open Water","Perennial Ice", "Open Space",
"Low Intensity","Median Intensity","High Intensity",
"Barren Land","Deciduous Forest","Evergreen Forest",
"Mixed Forest","Shrub/Scrub",'Grassland/Herbaceous',
'Pasture/Hay','Cultivated Crops',
'Woody Wetlands','Emergent Herbaceous Wetlands',
'others'
)
levels(yrb) <- land_cover
#plot(yrb, legend = T, col = land_col)
ygrid_geom = st_make_grid(yrb_lc, cellsize = 25000)
ygrid = st_sf(geom = ygrid_geom)
plot(yrb)
plot(ygrid, add = TRUE)
#polygonsLabel(ygrid, seq_len(nrow(ygrid)))
#
ygrid$plot_id = order(seq_len(nrow(ygrid)),decreasing = TRUE) #seq_len(nrow(ygrid))
#metrics<-calculate_lsm(yrb_lc, level = c("class", "landscape"), type = "aggregation metric")
####################################
#marginal entropy
ymetric = sample_lsm(yrb, ygrid,level = c("landscape"),
metric = c("ent"),plot_id =ygrid$plot_id,
return_raster = TRUE)
ygrid1 = left_join(ygrid, ymetric, by = "plot_id")
#ygrid1 =ygrid1[!is.na(ygrid1$value),]
mycolors<-c('#486DA2','#E7EFFC','#E1CDCE',
'#DC9881','#F10100','#AB0101',
'#B3AFA4','#6CA966','#1D6533',
'#BDCC93','#D1BB82','#EDECCD',
'#EDECCD','#AE7229',
'#AE7229','#71A4C1',
'#FFFFFF')
names(mycolors) <- land_cover$ID
ps<- gplot(yrb_lc)+
#geom_sf(ygrid)+
geom_tile(aes(fill=factor(value)))+
scale_fill_manual('Land Cover',values = mycolors)
ps
legend <- get_only_legend(ps)
gplot(ir)+
geom_tile(aes(fill=factor(value)))+
scale_fill_manual('Land Cover',values = mycolors)+
ggtitle(round(ivalue,2))+
theme(plot.title = element_text(hjust = 0.5))+
coord_equal()+theme_bw() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
plot.margin = rep(unit(0,"null"),4),
panel.margin = unit(0,"null"),
axis.ticks.length = unit(0,"null"),
axis.ticks.margin = unit(0,"null"))+ theme(legend.position='none')
i=2
ir <- ygrid1$raster_sample_plots[i][[1]]
ivalue<-ygrid1$value[i]
ig = ygrid1$geom[i]
gplot(ir)+
geom_tile(aes(fill=factor(value)))+
scale_fill_manual('Land Cover',values = mycolors)+
ggtitle(round(ivalue,2))+
theme(plot.title = element_text(hjust = 0.5))+
coord_equal()+theme_bw() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
plot.margin = rep(unit(0,"null"),4),
panel.margin = unit(0,"null"),
axis.ticks.length = unit(0,"null"),
axis.ticks.margin = unit(0,"null"))+ theme(legend.position='none')
gplot(ir)+
geom_tile(aes(fill=factor(value)))+
scale_fill_manual('Land Cover',values = mycolors)+
ggtitle(round(ivalue,2))+
theme(plot.title = element_text(hjust = 0.5))+
coord_equal()+theme_bw() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
plot.margin = rep(unit(0,"null"),4),
panel.spacing = unit(0,"null"),
axis.ticks.length = unit(0,"null"),
margin = unit(0,"null"))+ theme(legend.position='none')
gplot(ir)+
geom_tile(aes(fill=factor(value)))+
scale_fill_manual('Land Cover',values = mycolors)+
ggtitle(round(ivalue,2))+
theme(plot.title = element_text(hjust = 0.5))+
coord_equal()+theme_bw() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
plot.margin = rep(unit(0,"null"),4),
panel.spacing = unit(0,"null"),
axis.ticks.length = unit(0,"null"))+ theme(legend.position='none')
ggplot(ig)+
#geom_sf() +
ggtitle('NA')+#coord_sf(crs = st_crs(crs(yrb)))+
theme(plot.title = element_text(hjust = 0.5))+
coord_equal()+ theme_bw() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
plot.margin = rep(unit(0,"null"),4),
panel.spacing = unit(0,"null"),
axis.ticks.length = unit(0,"null"))+ theme(legend.position='none')
gplot(ir)+
geom_tile(aes(fill=factor(value)))+
scale_fill_manual('Land Cover',values = mycolors)+
ggtitle(round(ivalue,2))+
coord_equal()+theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
plot.margin = rep(unit(0,"null"),4),
panel.spacing = unit(0,"null"),
axis.ticks.length = unit(0,"null"))+ theme(legend.position='none')
ggplot(ig)+
#geom_sf() +
ggtitle('NA')+#coord_sf(crs = st_crs(crs(yrb)))+
coord_equal()+theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
plot.margin = rep(unit(0,"null"),4),
panel.spacing = unit(0,"null"),
axis.ticks.length = unit(0,"null"))+ theme(legend.position='none')
gplot(ir)+
geom_tile(aes(fill=factor(value)))+
scale_fill_manual('Land Cover',values = mycolors)+
ggtitle(round(ivalue,2))+
coord_equal()+theme_bw() +
theme(plot.title = element_text(size=1,hjust = 0.5),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
plot.margin = rep(unit(0,"null"),4),
panel.spacing = unit(0,"null"),
axis.ticks.length = unit(0,"null"))+ theme(legend.position='none')
gplot(ir)+
geom_tile(aes(fill=factor(value)))+
scale_fill_manual('Land Cover',values = mycolors)+
ggtitle(round(ivalue,2))+
coord_equal()+theme_bw() +
theme(plot.title = element_text(size=10,hjust = 0.5),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
plot.margin = rep(unit(0,"null"),4),
panel.spacing = unit(0,"null"),
axis.ticks.length = unit(0,"null"))+ theme(legend.position='none')
gplot(ir)+
geom_tile(aes(fill=factor(value)))+
scale_fill_manual('Land Cover',values = mycolors)+
ggtitle(round(ivalue,2))+
coord_equal()+theme_bw() +
theme(plot.title = element_text(size=5,hjust = 0.5),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
plot.margin = rep(unit(0,"null"),4),
panel.spacing = unit(0,"null"),
axis.ticks.length = unit(0,"null"))+ theme(legend.position='none')
rep(unit(0,"null"),4)
unit(c(2,2,2,2), "cm")
ggplot(ig)+
#geom_sf() +
#ggtitle('NA')+#coord_sf(crs = st_crs(crs(yrb)))+
coord_equal()+theme_bw() +
theme(#plot.title = element_text(hjust = 0.5),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
plot.margin = rep(unit(0,"mm"),4),
panel.spacing = unit(0,"mm"),
axis.ticks.length = unit(0,"mm"))+ theme(legend.position='none')
gplot(ir)+
geom_tile(aes(fill=factor(value)))+
scale_fill_manual('Land Cover',values = mycolors)+
ggtitle(round(ivalue,2))+
coord_equal()+theme_bw() +
theme(plot.title = element_text(size=6,hjust = 0.5),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
plot.margin = rep(unit(0,"mm"),4),
panel.spacing = unit(0,"mm"),
axis.ticks.length = unit(0,"mm"))+ theme(legend.position='none')
unique(ygrid2$plot_id)
ygrid$plot_id
seq_len(nrow(ygrid))
pids
pids <- unique(ygrid$plot_id)
pids
order(unique(ygrid$plot_id),decreasing = TRUE)
lindir = '//pnl/projects/SBR_SFA/RC2/07_Geospatial_Data/'
## YRB landcover
yrb_lc<- raster(file.path(lindir,'landcover','lc2019_YRB_5072.tif'))
library(chron)
library(lubridate)
library(hydroGOF)
library(gtools)
library(zoo)
library(openair)
home_gis<-'//pnl/projects/SBR_SFA/RC2/07_Geospatial_Data/gis'
## nhc_CR_stream_sub9 ## old nhdplus stream networks
## so updated one (nhd_yrb_stream3_vaa_wgs84.shp") was used.
#file_yakima<-"nhd_CR_stream_sub9.shp"
#nhd_sub9_stream<-st_read(paste(home_gis,file_yakima,sep="/"))
nhd_folder<-"C:/Project/Columbia_SWAT/NHD_YRB_SWAT/inputs/nhd"
nhd_stream_file<-"nhd_yrb_stream3_vaa_wgs84.shp"
install.packages('openair')
install.packages('hydroGOF')
library(chron)
library(lubridate)
library(hydroGOF)
library(gtools)
library(zoo)
library(openair)
home_gis<-'//pnl/projects/SBR_SFA/RC2/07_Geospatial_Data/gis'
## nhc_CR_stream_sub9 ## old nhdplus stream networks
## so updated one (nhd_yrb_stream3_vaa_wgs84.shp") was used.
#file_yakima<-"nhd_CR_stream_sub9.shp"
#nhd_sub9_stream<-st_read(paste(home_gis,file_yakima,sep="/"))
nhd_folder<-"C:/Project/Columbia_SWAT/NHD_YRB_SWAT/inputs/nhd"
nhd_stream_file<-"nhd_yrb_stream3_vaa_wgs84.shp"
#nhd_sub9_stream_wgs84<-st_read(paste(nhd_folder,nhd_stream_file,sep="/"))
nhd_sub9_stream_wgs84<-st_read(paste(home_gis,nhd_stream_file,sep="/"))
library(chron)
library(lubridate)
library(hydroGOF)
library(gtools)
library(zoo)
library(openair)
#nhd_sub9_stream_wgs84<-st_read(paste(nhd_folder,nhd_stream_file,sep="/"))
nhd_sub9_stream_wgs84<-st_read(paste(home_gis,nhd_stream_file,sep="/"))
library(hydroGOF)
library(sf)
#nhd_sub9_stream_wgs84<-st_read(paste(nhd_folder,nhd_stream_file,sep="/"))
nhd_sub9_stream_wgs84<-st_read(paste(home_gis,nhd_stream_file,sep="/"))
#nhd_sub9_stream_wgs84<-st_read(paste(nhd_folder,nhd_stream_file,sep="/"))
nhd_sub9_stream_wgs84
plot(nhd_sub9_stream_wgs84)
nhd_sub9_stream_wgs84=nhd_sub9_stream_wgs84[,c("Prmnnt_")]
colnames(nhd_sub9_stream_wgs84)=c("COMID","geometry")
nhd_sub9_stream_wgs84
nhd_stream_yrb_data<-nhd_sub9_stream_wgs84
nhd_stream_yrb_data
nhd_stream_yrb_data$geometry<-NULL
nhd_stream_yrb_data
## Land Cover Attributes##############
########### Percent NLCD 2011 Tree Canopy################3
#home_nhd_stream<-"D:/Project/SFA/Columbia_SPARROW/data/streamdatabase"
home_nhd_stream<-"//pnl/projects/SBR_SFA/RC2/07_Geospatial_Data/streamdatabase"
tree_canopy<-"Percent NLCD 2011 Tree Canopy/CNPY11_BUFF100_CONUS"
tree_canopy_file<-"CNPY11_BUFF100_CONUS.txt"
tree_canopy_info<-read.delim(paste(home_nhd_stream,tree_canopy,tree_canopy_file,sep="/"),header=T,sep=",")
home_nhd_stream
lindir = '//pnl/projects/SBR_SFA/RC2/07_Geospatial_Data/'
## YRB landcover
yrb_lc<- raster(file.path(lindir,'landcover','lc2019_YRB_5072.tif'))
yrb_shape<-shapefile(file.path(lindir,'RC2_Communication_Wrappe
library(Hmisc)
library(landscapemetrics)
library(landscapetools)
library(sf)
library(ggplot2)
library(gridExtra)
library(raster)
library(rasterVis)
library(rgdal)
library(dplyr)
library(tmap)
library(ggpubr)
)
)))
...
kk
gc()
gc()
setwd("C:/Users/linx882/OneDrive - PNNL/XLin/automation of respiration calculations/YRB_Water_Column_Respiration")
# read in  ERtotal data
ERriv <- read.csv(file.path('./Data/Appling_ERtot_analysis','mean_ERtot_bestSiteIDs.csv'))
#ERriv$ERvolumetric[ERriv$ERvolumetric>0]<-0
summary(ERriv$ERtot)
summary(ERriv$ERvolumetric)
names(erRIV)
names(ERriv)
library(MASS)
library(relaimpo)
library(visreg)
library(ggstatsplot)
library(caret)
library(leaps)
library(car)
library(patchwork)
library(scales)
library(moments)
